{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/dashboard/dashboard.component.css","webpack:///./src/app/component/dashboard/dashboard.component.html","webpack:///./src/app/component/dashboard/dashboard.component.ts","webpack:///./src/app/component/home/home.component.css","webpack:///./src/app/component/home/home.component.html","webpack:///./src/app/component/home/home.component.ts","webpack:///./src/app/component/login/login.component.css","webpack:///./src/app/component/login/login.component.html","webpack:///./src/app/component/login/login.component.ts","webpack:///./src/app/component/navbar/navbar.component.css","webpack:///./src/app/component/navbar/navbar.component.html","webpack:///./src/app/component/navbar/navbar.component.ts","webpack:///./src/app/component/profile/profile.component.css","webpack:///./src/app/component/profile/profile.component.html","webpack:///./src/app/component/profile/profile.component.ts","webpack:///./src/app/component/register/register.component.css","webpack:///./src/app/component/register/register.component.html","webpack:///./src/app/component/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/show-msg.service.ts","webpack:///./src/app/services/storage-handle.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+DAA+D,+H;;;;;;;;;;;ACA/D,uK;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,aAAa,CAAC;IACxB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACW;AACC;AAEG;AACT;AACuB;AACH;AACS;AACZ;AACe;AACN;AAC5B;AACa;AACI;AAER;AAEN;AAGhD,IAAM,SAAS,GAAY;IACzB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAG,6EAAa,EAAC;IACrC,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAG,wFAAiB,EAAC;IACjD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAG,+EAAc,EAAC;IAC3C,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAG,4FAAkB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAC;IAC5E,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAG,sFAAgB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAC;CACzE,CAAC;AAuBF;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kFAAe;gBACf,+EAAc;gBACd,wFAAiB;gBACjB,6EAAa;gBACb,4FAAkB;gBAClB,sFAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC/B,wEAAqB,CAAC,OAAO,EAAE;gBAC/B,2DAAW;aACZ;YACD,SAAS,EAAE,CAAC,2EAAe,EAAC,6DAAS,EAAE,mEAAW,CAAC;YACnD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnDtB,+DAA+D,mK;;;;;;;;;;;ACA/D,gG;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,yHAAyC;;SAE1C,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,+DAA+D,mJ;;;;;;;;;;;ACA/D,+2B;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,0GAAoC;;SAErC,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,+DAA+D,uJ;;;;;;;;;;;ACA/D,8hB;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACc;AACD;AACL;AACjB;AACoC;AAM7E;IAKE,wBAAoB,eAAiC,EACjC,cAA8B,EAC9B,WAAyB,EACzB,MAAe,EACf,cAAqC;QAJrC,oBAAe,GAAf,eAAe,CAAkB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAS;QACf,mBAAc,GAAd,cAAc,CAAuB;IAAI,CAAC;IAE9D,iCAAQ,GAAR;IACA,CAAC;IAED,sCAAa,GAAb;QAAA,iBA8BC;QA5BC,IAAM,UAAU,GAAG;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QAEF,uBAAuB;QACvB,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAC;YACpD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YACzD,OAAO,KAAK,CAAC;SACd;QAED,0BAA0B;QAC1B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;YACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAG,IAAI,CAAC,OAAO,EAAC;gBACd,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,SAAS,CAAC,CAAC;gBACpE,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;gBACjD,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5D,KAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBAC3C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aACtC;iBAAI;gBACH,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;gBAC7D,KAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE;gBACxC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IAGL,CAAC;IA5CU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,6GAAqC;;SAEtC,CAAC;+EAMsC,0EAAe;YACjB,yEAAc;YAChB,kEAAW;YAChB,sDAAM;YACE,qFAAoB;OAT9C,cAAc,CA8C1B;IAAD,qBAAC;CAAA;AA9C0B;;;;;;;;;;;;ACX3B,+DAA+D,2J;;;;;;;;;;;ACA/D,kmBAAkmB,WAAW,upBAAupB,WAAW,gOAAgO,WAAW,uOAAuO,WAAW,yOAAyO,WAAW,6T;;;;;;;;;;;;;;;;;;;;ACA96D;AACT;AACiB;AACK;AAO/D;IAEE,yBAAoB,MAAc,EACd,WAAyB,EACzB,UAA2B;QAF3B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAc;QACzB,eAAU,GAAV,UAAU,CAAiB;IAAI,CAAC;IAEpD,kCAAQ,GAAR;IACA,CAAC;IAED,uCAAa,GAAb;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,wCAAwC,EAAC,SAAS,CAAC,CAAC;QAC5E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC,CAAC,gGAAgG;IAChH,CAAC;IAdU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,gHAAsC;;SAEvC,CAAC;+EAG4B,sDAAM;YACA,kEAAW;YACZ,yEAAc;OAJpC,eAAe,CAgB3B;IAAD,sBAAC;CAAA;AAhB2B;;;;;;;;;;;;ACV5B,+DAA+D,2J;;;;;;;;;;;ACA/D,4EAA4E,WAAW,8FAA8F,eAAe,gEAAgE,YAAY,6B;;;;;;;;;;;;;;;;;;;ACA9N;AACQ;AACjB;AAOzC;IAGE,0BAAoB,WAAyB,EACzB,MAAe;QADf,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;IAExC,mCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,cAAI;YAC1C,oBAAoB;YACpB,IAAG,IAAI,EAAC;gBACN,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;aACvB;QACH,CAAC,EAAC,aAAG;YACH,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;IAfU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,mHAAuC;;SAExC,CAAC;+EAIkC,kEAAW;YAChB,sDAAM;OAJxB,gBAAgB,CAiB5B;IAAD,uBAAC;CAAA;AAjB4B;;;;;;;;;;;;ACT7B,+DAA+D,+J;;;;;;;;;;;ACA/D,21B;;;;;;;;;;;;;;;;;;;;;ACAkD;AACc;AACD;AACL;AACjB;AAOzC;IAOE,2BAAoB,eAAiC,EACjC,cAA8B,EAC9B,WAAyB,EACzB,MAAe;QAHf,oBAAe,GAAf,eAAe,CAAkB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;IAExC,oCAAQ,GAAR;IACA,CAAC;IAED,4CAAgB,GAAhB;QAAA,iBAoCC;QAnCC,IAAM,IAAI,GAAG;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QAEF,kBAAkB;QAClB,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC;YAC9C,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YACzD,OAAO,KAAK,CAAC;SACd;QAED,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;YACjD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;YACxD,OAAO,KAAK,CAAC;SACd;QAED,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;YACvD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,oEAAoE;gBAC1F,gEAAgE,CAAC,CAAC;YACxE,OAAO,KAAK,CAAC;SACd;QAED,gBAAgB;QAChB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YAChD,oBAAoB;YACpB,IAAG,IAAI,CAAC,OAAO,EAAC;gBACd,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,uCAAuC,EAAC,SAAS,CAAC,CAAC;gBAC/E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;iBAAI;gBACH,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,uBAAuB,CAAC,CAAC;gBACjE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAnDU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,sHAAwC;;SAEzC,CAAC;+EAQsC,0EAAe;YACjB,yEAAc;YAChB,kEAAW;YAChB,sDAAM;OAVxB,iBAAiB,CAqD7B;IAAD,wBAAC;CAAA;AArD6B;;;;;;;;;;;;;;;;;;;;ACXW;AACW;AACC;AAGrD;IACI,mBAAoB,WAAyB,EACzB,MAAe;QADf,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAS;IAAE,CAAC;IAEtC,+BAAW,GAAX;QACI,IAAG,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAC;YAClC,OAAO,IAAI,CAAC;SACf;aAAI;YACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IAXQ,SAAS;QADrB,gEAAU,EAAE;+EAEyB,kEAAW;YAChB,sDAAM;OAF1B,SAAS,CAYrB;IAAD,gBAAC;CAAA;AAZqB;;;;;;;;;;;;;;;;;;;;;;ACLqB;AAEN;AAC0B;AACC;AAChE,gGAAgG;AAC1C;AAKtD;IAOE,qBAAoB,IAAgB,EAChB,cAAoC;QADpC,SAAI,GAAJ,IAAI,CAAY;QAChB,mBAAc,GAAd,cAAc,CAAsB;QALxD,cAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;QACnC,iBAAY,GAAG,SAAS,CAAC,CAAC,mHAAmH;IAIjF,CAAC;IAE7D,mBAAmB;IACnB,kCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,CAAC,CAAC;QACnE,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,YAAY,IAAI,aAAa,CAAC,CAAC,CAAC,sCAAsC,CAAC,CAAC,CAAC,gBAAgB,EAAC,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAC1I,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,WAAI,EAAJ,CAAI,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,qBAAqB;IACrB,+BAAS,GAAT,UAAU,IAAI;QACZ,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,kBAAkB,EAAC,CAAC,CAAC;QACnE,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,YAAY,IAAI,aAAa,CAAC,CAAC,CAAC,0CAA0C,CAAC,CAAC,CAAC,oBAAoB,EAAC,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAClJ,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,WAAI,EAAJ,CAAI,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,cAAc;IACd,gCAAU,GAAV;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,eAAe,EAAC,IAAI,CAAC,SAAS,EAAC,cAAc,EAAC,kBAAkB,EAAC,CAAC,CAAC;QAClG,wEAAwE;QACxE,4CAA4C;QAC5C,4EAA4E;QAC5E,8BAA8B;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,YAAY,IAAI,aAAa,CAAC,CAAC,CAAC,qCAAqC,CAAC,CAAC,CAAC,eAAe,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAClI,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,WAAI,EAAJ,CAAI,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,gCAAU,GAAV;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,eAAe,EAAC,IAAI,CAAC,SAAS,EAAC,cAAc,EAAC,kBAAkB,EAAC,CAAC,CAAC;QAClG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,YAAY,IAAI,aAAa,CAAC,CAAC,CAAC,oCAAoC,CAAC,CAAC,CAAC,cAAc,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAChI,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,WAAI,EAAJ,CAAI,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,+BAAS,GAAT;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IACnE,CAAC;IAED,gDAAgD;IAChD,yCAAmB,GAAnB,UAAoB,IAAI;QACtB,IAAG,IAAI,CAAC,KAAK,EAAC;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;SAC7B;QACD,IAAG,IAAI,CAAC,IAAI,EAAC;YACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACvB;IACH,CAAC;IAED,oDAAoD;IACpD,2CAAqB,GAArB;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,kBAAkB;IAClB,4BAAM,GAAN;QAAA,iBAOC;QANC,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,cAAI;YAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,KAAI,CAAC,cAAc,CAAC,4BAA4B,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,oCAAc,GAAd;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IA9EU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;YACA,4EAAoB;OAR7C,WAAW,CAgFvB;IAAD,kBAAC;CAAA;AAhFuB;;;;;;;;;;;;;;;;;;;;ACXmB;AACe;AAK1D;IAEE,wBAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAI,CAAC;IAErE,gCAAO,GAAP,UAAQ,GAAY,EAAE,IAAc;QAClC,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;YAC1C,uDAAuD;YACvD,QAAQ,EAAE,CAAC,GAAG,CAAC;YACf,mEAAmE;YACnE,WAAW,EAAE,IAAI;YACjB,2DAA2D;YAC3D,OAAO,EAAE,IAAI;YACb,iGAAiG;YACjG,IAAI,EAAE,IAAI,IAAI,QAAQ;SACvB,CAAC,CAAC;IACL,CAAC;IAfU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG2C,uEAAqB;OAFrD,cAAc,CAgB1B;IAAD,qBAAC;CAAA;AAhB0B;;;;;;;;;;;;;;;;;;ACNgB;AAK3C;IAEE;IAAgB,CAAC;IAEjB,4BAA4B;IAC5B,8CAAe,GAAf,UAAgB,UAAmB,EAAE,IAAS;QAC5C,IAAG,UAAU,IAAI,IAAI,EAAC;YACpB,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7D,OAAO,IAAI,CAAC;SACb;aAAI;YACH,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,8BAA8B;IAC9B,8CAAe,GAAf,UAAgB,UAAkB;QAChC,IAAG,UAAU,EAAC;YACZ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;SAC5D;aAAI;YACH,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED,cAAc;IACd,iDAAkB,GAAlB,UAAmB,UAAkB;QACnC,IAAG,UAAU,EAAC;YACZ,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC;SACb;aAAI;YACH,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,mCAAmC;IACnC,2DAA4B,GAA5B;QACE,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IApCU,oBAAoB;QAHhC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,oBAAoB,CAqChC;IAAD,2BAAC;CAAA;AArCgC;;;;;;;;;;;;;;;;;;ACLU;AAM3C;IAEE;IAAgB,CAAC;IAEjB,0CAAgB,GAAhB,UAAiB,IAAI;QACnB,IAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAC;YAC3D,OAAO,KAAK,CAAC;SAClB;aAAI;YACH,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,uCAAa,GAAb,UAAc,KAAK;QACjB,IAAM,UAAU,GAAG,+CAA+C,CAAC;QACnE,OAAO,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,0CAAgB,GAAhB,UAAiB,IAAI;QACnB,IAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAC;YAC3C,OAAO,KAAK,CAAC;SACd;aAAI;YACH,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,0CAAgB,GAAhB,UAAiB,QAAQ;QACvB,IAAG,QAAQ,EAAC;YACV,IAAM,aAAa,GAAG,yCAAyC,CAAC;YAChE,OAAO,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACrC;aAAI;YACH,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAhCU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,eAAe,CAkC3B;IAAD,sBAAC;CAAA;AAlC2B;;;;;;;;;;;;;ACN5B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"jumbotron\\\">\\r\\n    <ng-flash-message></ng-flash-message>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router' \nimport {HttpClientModule} from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './component/navbar/navbar.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { RegisterComponent } from './component/register/register.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { DashboardComponent } from './component/dashboard/dashboard.component';\nimport { ProfileComponent } from './component/profile/profile.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\nimport { ValidateService } from './services/validate.service';\nimport { ShowMsgService } from './services/show-msg.service';\nimport { AuthService } from './services/auth.service';\nimport { StorageHandleService } from './services/storage-handle.service';\nimport { AuthGuard } from './guards/auth.guard';\n\n\nconst appRoutes : Routes = [\n  {path: '', component : HomeComponent},\n  {path: 'register', component : RegisterComponent},\n  {path: 'login', component : LoginComponent},\n  {path: 'dashboard', component : DashboardComponent, canActivate:[AuthGuard]},\n  {path: 'profile', component : ProfileComponent, canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    NgFlashMessagesModule.forRoot(),\n    FormsModule\n  ],\n  providers: [ValidateService,AuthGuard, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2 class=\\\"page-header\\\">Dashboard</h2>\\n<p>\\n  Welcome to Dashboard!!\\n</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>MEAN Authentication</h1>\\n  <p class=\\\"lead\\\">Welcome to our custom MEAN authentication application built from scratch</p>\\n  <div>\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n    <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h3>\\n      Express Backend\\n    </h3>\\n    <p>\\n      lorem ipsum text is random text used for random text\\n    </p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>\\n      Angular 7 Frontend\\n    </h3>\\n    <p>\\n      lorem ipsum text is random text used for random text\\n    </p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>\\n      Mongo Database\\n    </h3>\\n    <p>\\n      lorem ipsum text is random text used for random text\\n    </p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2><br/>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\">    \\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">    \\n  </div>\\n  <input type=\\\"submit\\\" name=\\\"submit\\\" id=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"submit\\\">\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport {ValidateService} from '../../services/validate.service';\nimport {ShowMsgService} from '../../services/show-msg.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { StorageHandleService } from '../../services/storage-handle.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username : string;\n  password : string;\n\n  constructor(private validateService : ValidateService, \n              private showMsgService: ShowMsgService,\n              private authService : AuthService,\n              private router : Router,\n              private storageHandler : StorageHandleService) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n\n    const credential = {\n      username: this.username,\n      password: this.password\n    };\n\n    // Validate credentials\n    if(!this.validateService.validateUserCred(credential)){\n      this.showMsgService.showMsg('Please fill in all fields');\n      return false;\n    }\n\n    // Authentocation for user\n    this.authService.loginUser(credential).subscribe(data => {\n      console.log(data);\n      if(data.success){\n        this.showMsgService.showMsg('Welcome! ' + data.user.name,'success');\n        this.storageHandler.setLocalStorage('user',data);\n        this.storageHandler.setLocalStorage('id_token', data.token);\n        this.authService.setUserAndAuthValue(data);\n        this.router.navigate(['/dashboard']);\n      }else{\n        this.showMsgService.showMsg('Username / Password not valid');\n        this.authService.resetUserAndAuthValue()\n        this.router.navigate(['/login']);\n      }\n    });\n\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">MEAN Auth App</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n           \\n      <!-- <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">About</a>\\n      </li> -->\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <!-- <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\n      <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button> -->\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li *ngIf=\\\"authService.isTokenExpired()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n        </li>\\n        <li *ngIf=\\\"authService.isTokenExpired()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n        </li>\\n        <li *ngIf=\\\"!authService.isTokenExpired()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\"[routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n        </li> \\n        <li *ngIf=\\\"!authService.isTokenExpired()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n        </li>       \\n        <li *ngIf=\\\"!authService.isTokenExpired()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\">Logout</a>\\n        </li>\\n      </ul> \\n    </form>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport {ShowMsgService} from '../../services/show-msg.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private router: Router,\n              private authService : AuthService,\n              private msgService : ShowMsgService) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.msgService.showMsg('You have been successfully logged out!','success');\n    this.router.navigate(['/login']);\n    return false; // Return false is necessary because it will prevent '/#' routing to default routing in angular \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\">\\n    {{user.name}}\\n  </h2>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">\\n      Username: {{user.username}}\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      Email: {{user.email}}\\n    </li>\\n  </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {  \n  user : Object;\n\n  constructor(private authService : AuthService,\n              private router : Router) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(data => {\n      //console.log(data);\n      if(data){\n        this.user = data.data;\n      }\n    },err =>{\n      console.log('Error -: ', err);\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h2 class=\\\"page-header\\\">Register</h2><br/>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">    \\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\">    \\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Email</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">    \\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">    \\n  </div>\\n  <input type=\\\"submit\\\" name=\\\"submit\\\" id=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"submit\\\">\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport {ValidateService} from '../../services/validate.service';\nimport {ShowMsgService} from '../../services/show-msg.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  name : string;\n  username: string;\n  email: string;\n  password: string;\n\n  constructor(private validateService : ValidateService, \n              private showMsgService: ShowMsgService,\n              private authService : AuthService,\n              private router : Router) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit(){\n    const user = {  \n      name: this.name,\n      username: this.username,  \n      email: this.email,\n      password: this.password\n    };\n\n    // Required fields\n    if(!this.validateService.validateRegister(user)){\n      this.showMsgService.showMsg('Please fill in all fields');\n      return false;\n    }\n\n    if(!this.validateService.validateEmail(user.email)){\n      this.showMsgService.showMsg('Please enter valid email');\n      return false;\n    }\n\n    if(!this.validateService.validatePassword(user.password)){\n      this.showMsgService.showMsg('Please make sure that your passwor is contains 6 to 20 characters '+ \n            ', at least one numeric digit, one uppercase and one lowercase.');\n      return false;\n    }\n\n    // Register User\n    this.authService.registerUser(user).subscribe(data => {\n      //console.log(data);\n      if(data.success){\n        this.showMsgService.showMsg('You are now registered and can login!','success');\n        this.router.navigate(['/login']);\n      }else{\n        this.showMsgService.showMsg(data.msg || 'Something went wrong!');\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {Router, CanActivate} from '@angular/router';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(private authService : AuthService,\r\n                private router : Router){}\r\n\r\n    canActivate(){\r\n        if(!this.authService.isTokenExpired()){\r\n            return true;\r\n        }else{\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http'\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { StorageHandleService } from './storage-handle.service';\n//import { tokenNotExpired } from 'angular2-jwt'; // This dependency is not working in Angular 7\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  jwtHelper = new JwtHelperService();\n  envioronment = 'SANDBOX'; //'DEVELOPMENT'; // 'DEVELOPMENT' -> While you develope in locally & 'PRODUCTION' -> When want to deploy to server;\n\n\n  constructor(private http: HttpClient, \n              private storageHandler: StorageHandleService) { }\n\n  // Register service\n  registerUser(user){\n    let headers = new HttpHeaders({'Content-Type':'application/json'});\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>(this.envioronment == 'DEVELOPMENT' ? 'http://localhost:3000/users/register' : 'users/register',user, {headers: headers})\n            .pipe(map(data => data));\n  }\n\n  // Login User Service\n  loginUser(cred){\n    let headers = new HttpHeaders({'Content-Type':'application/json'});\n    headers.append('Content-Type','application/json');\n    return this.http.post<any>(this.envioronment == 'DEVELOPMENT' ? 'http://localhost:3000/users/authenticate' : 'users/authenticate',cred, {headers: headers})\n            .pipe(map(data => data));\n  }\n\n  // Get Profile\n  getProfile(){\n    this.loadToken();\n    let headers = new HttpHeaders({'Authorization':this.authToken,'Content-Type':'application/json'});    \n    //headers.append('Authorization',this.authToken); // This is not working\n    //console.log(headers.get('Authorization'));\n    //headers.append('Content-Type','application/json');  // This is not working\n    //console.log(this.authToken);\n    return this.http.get<any>(this.envioronment == 'DEVELOPMENT' ? 'http://localhost:3000/users/profile' : 'users/profile', {headers: headers})\n            .pipe(map(data => data));\n  }\n\n  logoutUser(){\n    this.loadToken();\n    let headers = new HttpHeaders({'Authorization':this.authToken,'Content-Type':'application/json'});\n    return this.http.get<any>(this.envioronment == 'DEVELOPMENT' ? 'http://localhost:3000/users/logout' : 'users/logout', {headers: headers})\n            .pipe(map(data => data));\n  }\n\n  loadToken(){\n    this.authToken = this.storageHandler.getLocalStorage('id_token');    \n  }\n\n  // Set user and authetication for logged in user\n  setUserAndAuthValue(data){\n    if(data.token){\n      this.authToken = data.token;\n    }\n    if(data.user){\n      this.user = data.user;\n    }\n  }\n\n  // Reser user and token information for this service\n  resetUserAndAuthValue(){\n    this.authToken = null;\n    this.user = null;\n  }\n\n  // Logout function\n  logout(){\n    this.logoutUser().subscribe(data => {\n      console.log(data);\n      this.resetUserAndAuthValue();\n      this.storageHandler.clearAllDataFromLocalStorage(); \n    });\n    \n  }\n\n  isTokenExpired(){\n    this.loadToken();\n    return this.jwtHelper.isTokenExpired(this.authToken);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { NgFlashMessageService } from 'ng-flash-messages';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowMsgService {\n\n  constructor(private ngFlashMessageService: NgFlashMessageService) { }\n\n  showMsg(msg : string, type? : string){\n    this.ngFlashMessageService.showFlashMessage({\n      // Array of messages each will be displayed in new line\n      messages: [msg], \n      // Whether the flash can be dismissed by the user defaults to false\n      dismissible: true, \n      // Time after which the flash disappears defaults to 2000ms\n      timeout: 3000,\n      // Type of flash message, it defaults to info and success, warning, danger types can also be used\n      type: type || 'danger'\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageHandleService {\n\n  constructor() { }\n\n  // Set data to Local Storage\n  setLocalStorage(uniqueName : string, data: any){\n    if(uniqueName && data){\n      window.localStorage.setItem(uniqueName,JSON.stringify(data));      \n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  // Get data from Local Storage\n  getLocalStorage(uniqueName: string){\n    if(uniqueName){\n      return JSON.parse(window.localStorage.getItem(uniqueName));      \n    }else{\n      return '';\n    }\n  }\n\n  // Remove Data\n  removeLocalStorage(uniqueName: string){\n    if(uniqueName){\n      window.localStorage.removeItem(uniqueName);\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  // Clear all data from localstorage\n  clearAllDataFromLocalStorage(){\n    window.localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ReturnStatement } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(!user.name || !user.password || !user.username || !user.email){\n          return false;\n    }else{\n      return true;\n    }\n  }\n\n  validateEmail(email){\n    const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    return emailRegex.test(email);\n  }\n\n  validateUserCred(cred){\n    if(!cred || !cred.username || !cred.password){\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  validatePassword(password){\n    if(password){\n      const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\n      return passwordRegex.test(password);\n    }else{\n      return false;\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}